//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "RentItService", ConfigurationName = "IUpDownloadService")]
public interface IUpDownloadService
{

    // CODEGEN: Generating message contract since the wrapper name (FileRequest) of message FileRequest does not match the default value (DownloadFile)
    [System.ServiceModel.OperationContractAttribute(Action = "RentItService/IUpDownloadService/DownloadFile", ReplyAction = "RentItService/IUpDownloadService/DownloadFileResponse")]
    RemoteFileStream DownloadFile(FileRequest request);

    // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
    [System.ServiceModel.OperationContractAttribute(Action = "RentItService/IUpDownloadService/UploadFile", ReplyAction = "RentItService/IUpDownloadService/UploadFileResponse")]
    UploadFileResponse UploadFile(RemoteFileStream request);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName = "FileRequest", WrapperNamespace = "RentItService", IsWrapped = true)]
public partial class FileRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "RentItService", Order = 0)]
    public string FileName;

    public FileRequest()
    {
    }

    public FileRequest(string FileName)
    {
        this.FileName = FileName;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName = "RemoteFileStream", WrapperNamespace = "RentItService", IsWrapped = true)]
public partial class RemoteFileStream
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "RentItService")]
    public string FileName;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "RentItService")]
    public long Length;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "RentItService", Order = 0)]
    public System.IO.Stream FileByteStream;

    public RemoteFileStream()
    {
    }

    public RemoteFileStream(string FileName, long Length, System.IO.Stream FileByteStream)
    {
        this.FileName = FileName;
        this.Length = Length;
        this.FileByteStream = FileByteStream;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class UploadFileResponse
{

    public UploadFileResponse()
    {
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IUpDownloadServiceChannel : IUpDownloadService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class UpDownloadServiceClient : System.ServiceModel.ClientBase<IUpDownloadService>, IUpDownloadService
{

    public UpDownloadServiceClient()
    {
    }

    public UpDownloadServiceClient(string endpointConfigurationName) :
        base(endpointConfigurationName)
    {
    }

    public UpDownloadServiceClient(string endpointConfigurationName, string remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public UpDownloadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public UpDownloadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        base(binding, remoteAddress)
    {
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    RemoteFileStream IUpDownloadService.DownloadFile(FileRequest request)
    {
        return base.Channel.DownloadFile(request);
    }

    public long DownloadFile(ref string FileName, out System.IO.Stream FileByteStream)
    {
        FileRequest inValue = new FileRequest();
        inValue.FileName = FileName;
        RemoteFileStream retVal = ((IUpDownloadService)(this)).DownloadFile(inValue);
        FileName = retVal.FileName;
        FileByteStream = retVal.FileByteStream;
        return retVal.Length;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    UploadFileResponse IUpDownloadService.UploadFile(RemoteFileStream request)
    {
        return base.Channel.UploadFile(request);
    }

    public void UploadFile(string FileName, long Length, System.IO.Stream FileByteStream)
    {
        RemoteFileStream inValue = new RemoteFileStream();
        inValue.FileName = FileName;
        inValue.Length = Length;
        inValue.FileByteStream = FileByteStream;
        UploadFileResponse retVal = ((IUpDownloadService)(this)).UploadFile(inValue);
    }
}
