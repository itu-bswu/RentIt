//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentIt.Tests.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IUploadService")]
    public interface IUploadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadService/UploadFile", ReplyAction="http://tempuri.org/IUploadService/UploadFileResponse")]
        void UploadFile(string token, RentItService.Library.RemoteFileStream uploadRequest, RentItService.Entities.Movie movieObject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUploadServiceChannel : RentIt.Tests.ServiceReference.IUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadServiceClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IUploadService>, RentIt.Tests.ServiceReference.IUploadService {
        
        public UploadServiceClient() {
        }
        
        public UploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadFile(string token, RentItService.Library.RemoteFileStream uploadRequest, RentItService.Entities.Movie movieObject) {
            base.Channel.UploadFile(token, uploadRequest, movieObject);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IGetMovieData")]
    public interface IGetMovieData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetMovieData/GetMovieInformation", ReplyAction="http://tempuri.org/IGetMovieData/GetMovieInformationResponse")]
        RentItService.Entities.Movie GetMovieInformation(string token, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetMovieData/GetMostDownloaded", ReplyAction="http://tempuri.org/IGetMovieData/GetMostDownloadedResponse")]
        RentItService.Entities.Movie[] GetMostDownloaded(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetMovieData/GetAllGenres", ReplyAction="http://tempuri.org/IGetMovieData/GetAllGenresResponse")]
        string[] GetAllGenres(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetMovieData/GetMoviesByGenre", ReplyAction="http://tempuri.org/IGetMovieData/GetMoviesByGenreResponse")]
        RentItService.Entities.Movie[] GetMoviesByGenre(string token, string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetMovieData/Search", ReplyAction="http://tempuri.org/IGetMovieData/SearchResponse")]
        RentItService.Entities.Movie[] Search(string token, [System.ServiceModel.MessageParameterAttribute(Name="search")] string search1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetMovieDataChannel : RentIt.Tests.ServiceReference.IGetMovieData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMovieDataClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IGetMovieData>, RentIt.Tests.ServiceReference.IGetMovieData {
        
        public GetMovieDataClient() {
        }
        
        public GetMovieDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetMovieDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetMovieDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetMovieDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RentItService.Entities.Movie GetMovieInformation(string token, int movieId) {
            return base.Channel.GetMovieInformation(token, movieId);
        }
        
        public RentItService.Entities.Movie[] GetMostDownloaded(string token) {
            return base.Channel.GetMostDownloaded(token);
        }
        
        public string[] GetAllGenres(string token) {
            return base.Channel.GetAllGenres(token);
        }
        
        public RentItService.Entities.Movie[] GetMoviesByGenre(string token, string genre) {
            return base.Channel.GetMoviesByGenre(token, genre);
        }
        
        public RentItService.Entities.Movie[] Search(string token, string search1) {
            return base.Channel.Search(token, search1);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IContentService")]
    public interface IContentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/EditMovieInformation", ReplyAction="http://tempuri.org/IContentService/EditMovieInformationResponse")]
        void EditMovieInformation(string token, RentItService.Entities.Movie movieObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/DeleteMovie", ReplyAction="http://tempuri.org/IContentService/DeleteMovieResponse")]
        void DeleteMovie(string token, RentItService.Entities.Movie movieObject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentServiceChannel : RentIt.Tests.ServiceReference.IContentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentServiceClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IContentService>, RentIt.Tests.ServiceReference.IContentService {
        
        public ContentServiceClient() {
        }
        
        public ContentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void EditMovieInformation(string token, RentItService.Entities.Movie movieObject) {
            base.Channel.EditMovieInformation(token, movieObject);
        }
        
        public void DeleteMovie(string token, RentItService.Entities.Movie movieObject) {
            base.Channel.DeleteMovie(token, movieObject);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDownloadService")]
    public interface IDownloadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadService/DownloadFile", ReplyAction="http://tempuri.org/IDownloadService/DownloadFileResponse")]
        RentItService.Library.RemoteFileStream DownloadFile(string token, RentItService.Entities.Movie downloadRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDownloadServiceChannel : RentIt.Tests.ServiceReference.IDownloadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadServiceClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IDownloadService>, RentIt.Tests.ServiceReference.IDownloadService {
        
        public DownloadServiceClient() {
        }
        
        public DownloadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DownloadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DownloadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DownloadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RentItService.Library.RemoteFileStream DownloadFile(string token, RentItService.Entities.Movie downloadRequest) {
            return base.Channel.DownloadFile(token, downloadRequest);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IUserInformation")]
    public interface IUserInformation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInformation/SignUp", ReplyAction="http://tempuri.org/IUserInformation/SignUpResponse")]
        bool SignUp(RentItService.Entities.User userObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInformation/LogIn", ReplyAction="http://tempuri.org/IUserInformation/LogInResponse")]
        RentItService.Entities.User LogIn(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInformation/EditProfile", ReplyAction="http://tempuri.org/IUserInformation/EditProfileResponse")]
        void EditProfile(string token, RentItService.Entities.User userObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInformation/GetRentalHistory", ReplyAction="http://tempuri.org/IUserInformation/GetRentalHistoryResponse")]
        RentItService.Entities.Rental[] GetRentalHistory(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInformation/GetCurrentRentals", ReplyAction="http://tempuri.org/IUserInformation/GetCurrentRentalsResponse")]
        RentItService.Entities.Rental[] GetCurrentRentals(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserInformation/RentMovie", ReplyAction="http://tempuri.org/IUserInformation/RentMovieResponse")]
        void RentMovie(string token, int movieId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserInformationChannel : RentIt.Tests.ServiceReference.IUserInformation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserInformationClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IUserInformation>, RentIt.Tests.ServiceReference.IUserInformation {
        
        public UserInformationClient() {
        }
        
        public UserInformationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserInformationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserInformationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserInformationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SignUp(RentItService.Entities.User userObject) {
            return base.Channel.SignUp(userObject);
        }
        
        public RentItService.Entities.User LogIn(string userName, string password) {
            return base.Channel.LogIn(userName, password);
        }
        
        public void EditProfile(string token, RentItService.Entities.User userObject) {
            base.Channel.EditProfile(token, userObject);
        }
        
        public RentItService.Entities.Rental[] GetRentalHistory(string token) {
            return base.Channel.GetRentalHistory(token);
        }
        
        public RentItService.Entities.Rental[] GetCurrentRentals(string token) {
            return base.Channel.GetCurrentRentals(token);
        }
        
        public void RentMovie(string token, int movieId) {
            base.Channel.RentMovie(token, movieId);
        }
    }
}
