//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentIt.Tests.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IContentBrowsing")]
    public interface IContentBrowsing {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/GetMovies", ReplyAction="http://tempuri.org/IContentBrowsing/GetMoviesResponse")]
        bool GetMovies(out RentItService.Entities.Movie[] movies, string token, RentItService.Enums.MovieSorting sorting, string genre, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/GetGenres", ReplyAction="http://tempuri.org/IContentBrowsing/GetGenresResponse")]
        bool GetGenres(out string[] genres, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/Search", ReplyAction="http://tempuri.org/IContentBrowsing/SearchResponse")]
        bool Search(out RentItService.Entities.Movie[] movies, string token, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/GetMovieInformation", ReplyAction="http://tempuri.org/IContentBrowsing/GetMovieInformationResponse")]
        bool GetMovieInformation(string token, ref RentItService.Entities.Movie movie);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentBrowsingChannel : RentIt.Tests.ServiceReference.IContentBrowsing, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentBrowsingClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IContentBrowsing>, RentIt.Tests.ServiceReference.IContentBrowsing {
        
        public ContentBrowsingClient() {
        }
        
        public ContentBrowsingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentBrowsingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentBrowsingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentBrowsingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetMovies(out RentItService.Entities.Movie[] movies, string token, RentItService.Enums.MovieSorting sorting, string genre, int limit) {
            return base.Channel.GetMovies(out movies, token, sorting, genre, limit);
        }
        
        public bool GetGenres(out string[] genres, string token) {
            return base.Channel.GetGenres(out genres, token);
        }
        
        public bool Search(out RentItService.Entities.Movie[] movies, string token, string query) {
            return base.Channel.Search(out movies, token, query);
        }
        
        public bool GetMovieInformation(string token, ref RentItService.Entities.Movie movie) {
            return base.Channel.GetMovieInformation(token, ref movie);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IContentManagement")]
    public interface IContentManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/RegisterMovie", ReplyAction="http://tempuri.org/IContentManagement/RegisterMovieResponse")]
        bool RegisterMovie(string token, ref RentItService.Entities.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/EditMovie", ReplyAction="http://tempuri.org/IContentManagement/EditMovieResponse")]
        bool EditMovie(string token, ref RentItService.Entities.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/DeleteMovie", ReplyAction="http://tempuri.org/IContentManagement/DeleteMovieResponse")]
        bool DeleteMovie(string token, RentItService.Entities.Movie movie);
        
        // CODEGEN: Generating message contract since the operation UploadEdition is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/UploadEdition", ReplyAction="http://tempuri.org/IContentManagement/UploadEditionResponse")]
        RentIt.Tests.ServiceReference.UploadEditionResponse UploadEdition(RentIt.Tests.ServiceReference.RemoteFileStream request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/DeleteEdition", ReplyAction="http://tempuri.org/IContentManagement/DeleteEditionResponse")]
        bool DeleteEdition(string token, RentItService.Entities.Edition edition);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileStream", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileStream {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public RentItService.Entities.Edition Edition;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileStream() {
        }
        
        public RemoteFileStream(RentItService.Entities.Edition Edition, string FileName, long Length, string Token, System.IO.Stream FileByteStream) {
            this.Edition = Edition;
            this.FileName = FileName;
            this.Length = Length;
            this.Token = Token;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadEditionResponse {
        
        public UploadEditionResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentManagementChannel : RentIt.Tests.ServiceReference.IContentManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentManagementClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IContentManagement>, RentIt.Tests.ServiceReference.IContentManagement {
        
        public ContentManagementClient() {
        }
        
        public ContentManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterMovie(string token, ref RentItService.Entities.Movie movie) {
            return base.Channel.RegisterMovie(token, ref movie);
        }
        
        public bool EditMovie(string token, ref RentItService.Entities.Movie movie) {
            return base.Channel.EditMovie(token, ref movie);
        }
        
        public bool DeleteMovie(string token, RentItService.Entities.Movie movie) {
            return base.Channel.DeleteMovie(token, movie);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RentIt.Tests.ServiceReference.UploadEditionResponse RentIt.Tests.ServiceReference.IContentManagement.UploadEdition(RentIt.Tests.ServiceReference.RemoteFileStream request) {
            return base.Channel.UploadEdition(request);
        }
        
        public void UploadEdition(RentItService.Entities.Edition Edition, string FileName, long Length, string Token, System.IO.Stream FileByteStream) {
            RentIt.Tests.ServiceReference.RemoteFileStream inValue = new RentIt.Tests.ServiceReference.RemoteFileStream();
            inValue.Edition = Edition;
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.Token = Token;
            inValue.FileByteStream = FileByteStream;
            RentIt.Tests.ServiceReference.UploadEditionResponse retVal = ((RentIt.Tests.ServiceReference.IContentManagement)(this)).UploadEdition(inValue);
        }
        
        public bool DeleteEdition(string token, RentItService.Entities.Edition edition) {
            return base.Channel.DeleteEdition(token, edition);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IRentalManagement")]
    public interface IRentalManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalManagement/GetRentals", ReplyAction="http://tempuri.org/IRentalManagement/GetRentalsResponse")]
        bool GetRentals(out RentItService.Entities.Rental[] rentals, string token, RentItService.Enums.RentalScope scope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalManagement/RentMovie", ReplyAction="http://tempuri.org/IRentalManagement/RentMovieResponse")]
        bool RentMovie(string token, RentItService.Entities.Edition edition);
        
        // CODEGEN: Generating message contract since the wrapper name (RemoteFileStream) of message RemoteFileStream does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalManagement/DownloadFile", ReplyAction="http://tempuri.org/IRentalManagement/DownloadFileResponse")]
        RentIt.Tests.ServiceReference.RemoteFileStream DownloadFile(RentIt.Tests.ServiceReference.RemoteFileStream request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentalManagementChannel : RentIt.Tests.ServiceReference.IRentalManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentalManagementClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IRentalManagement>, RentIt.Tests.ServiceReference.IRentalManagement {
        
        public RentalManagementClient() {
        }
        
        public RentalManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentalManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetRentals(out RentItService.Entities.Rental[] rentals, string token, RentItService.Enums.RentalScope scope) {
            return base.Channel.GetRentals(out rentals, token, scope);
        }
        
        public bool RentMovie(string token, RentItService.Entities.Edition edition) {
            return base.Channel.RentMovie(token, edition);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RentIt.Tests.ServiceReference.RemoteFileStream RentIt.Tests.ServiceReference.IRentalManagement.DownloadFile(RentIt.Tests.ServiceReference.RemoteFileStream request) {
            return base.Channel.DownloadFile(request);
        }
        
        public void DownloadFile(ref RentItService.Entities.Edition Edition, ref string FileName, ref long Length, ref string Token, ref System.IO.Stream FileByteStream) {
            RentIt.Tests.ServiceReference.RemoteFileStream inValue = new RentIt.Tests.ServiceReference.RemoteFileStream();
            inValue.Edition = Edition;
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.Token = Token;
            inValue.FileByteStream = FileByteStream;
            RentIt.Tests.ServiceReference.RemoteFileStream retVal = ((RentIt.Tests.ServiceReference.IRentalManagement)(this)).DownloadFile(inValue);
            Edition = retVal.Edition;
            FileName = retVal.FileName;
            Length = retVal.Length;
            Token = retVal.Token;
            FileByteStream = retVal.FileByteStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IUserManagement")]
    public interface IUserManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SignUp", ReplyAction="http://tempuri.org/IUserManagement/SignUpResponse")]
        bool SignUp(ref RentItService.Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/Login", ReplyAction="http://tempuri.org/IUserManagement/LoginResponse")]
        bool Login(out RentItService.Entities.User user, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/Logout", ReplyAction="http://tempuri.org/IUserManagement/LogoutResponse")]
        bool Logout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/EditUser", ReplyAction="http://tempuri.org/IUserManagement/EditUserResponse")]
        bool EditUser(string token, ref RentItService.Entities.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementChannel : RentIt.Tests.ServiceReference.IUserManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementClient : System.ServiceModel.ClientBase<RentIt.Tests.ServiceReference.IUserManagement>, RentIt.Tests.ServiceReference.IUserManagement {
        
        public UserManagementClient() {
        }
        
        public UserManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SignUp(ref RentItService.Entities.User user) {
            return base.Channel.SignUp(ref user);
        }
        
        public bool Login(out RentItService.Entities.User user, string username, string password) {
            return base.Channel.Login(out user, username, password);
        }
        
        public bool Logout(string token) {
            return base.Channel.Logout(token);
        }
        
        public bool EditUser(string token, ref RentItService.Entities.User user) {
            return base.Channel.EditUser(token, ref user);
        }
    }
}
