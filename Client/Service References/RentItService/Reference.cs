//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentItClient.RentItService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieSorting", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Enums")]
    public enum MovieSorting : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Newest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MostDownloaded = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Edition[] EditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Genre[] GenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.User OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Edition[] Editions {
            get {
                return this.EditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.EditionsField, value) != true)) {
                    this.EditionsField = value;
                    this.RaisePropertyChanged("Editions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Genre[] Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.User Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Rental[] RentalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.UserType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Movie[] UploadedMoviesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Rental[] Rentals {
            get {
                return this.RentalsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentalsField, value) != true)) {
                    this.RentalsField = value;
                    this.RaisePropertyChanged("Rentals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TypeValue {
            get {
                return this.TypeValueField;
            }
            set {
                if ((this.TypeValueField.Equals(value) != true)) {
                    this.TypeValueField = value;
                    this.RaisePropertyChanged("TypeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Movie[] UploadedMovies {
            get {
                return this.UploadedMoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadedMoviesField, value) != true)) {
                    this.UploadedMoviesField = value;
                    this.RaisePropertyChanged("UploadedMovies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Edition", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Edition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Movie MovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Rental[] RentalsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Movie Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieID {
            get {
                return this.MovieIDField;
            }
            set {
                if ((this.MovieIDField.Equals(value) != true)) {
                    this.MovieIDField = value;
                    this.RaisePropertyChanged("MovieID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Rental[] Rentals {
            get {
                return this.RentalsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentalsField, value) != true)) {
                    this.RentalsField = value;
                    this.RaisePropertyChanged("Rentals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Movie[] AssociatedMoviesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Movie[] AssociatedMovies {
            get {
                return this.AssociatedMoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociatedMoviesField, value) != true)) {
                    this.AssociatedMoviesField = value;
                    this.RaisePropertyChanged("AssociatedMovies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rental", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Rental : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.Edition EditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EditionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RentItClient.RentItService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.Edition Edition {
            get {
                return this.EditionField;
            }
            set {
                if ((object.ReferenceEquals(this.EditionField, value) != true)) {
                    this.EditionField = value;
                    this.RaisePropertyChanged("Edition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EditionID {
            get {
                return this.EditionIDField;
            }
            set {
                if ((this.EditionIDField.Equals(value) != true)) {
                    this.EditionIDField = value;
                    this.RaisePropertyChanged("EditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RentItClient.RentItService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Enums")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContentProvider = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAdmin = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteFileStream", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Library")]
    [System.SerializableAttribute()]
    public partial class RemoteFileStream : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream FileByteStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream FileByteStream {
            get {
                return this.FileByteStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.FileByteStreamField, value) != true)) {
                    this.FileByteStreamField = value;
                    this.RaisePropertyChanged("FileByteStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RentalScope", Namespace="http://schemas.datacontract.org/2004/07/RentItService.Enums")]
    public enum RentalScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentItService.IContentBrowsing")]
    public interface IContentBrowsing {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/GetMovies", ReplyAction="http://tempuri.org/IContentBrowsing/GetMoviesResponse")]
        bool GetMovies(out RentItClient.RentItService.Movie[] movies, string token, RentItClient.RentItService.MovieSorting sorting, string genre, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/GetGenres", ReplyAction="http://tempuri.org/IContentBrowsing/GetGenresResponse")]
        bool GetGenres(out string[] genres, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/Search", ReplyAction="http://tempuri.org/IContentBrowsing/SearchResponse")]
        bool Search(out RentItClient.RentItService.Movie[] movies, string token, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentBrowsing/GetMovieInformation", ReplyAction="http://tempuri.org/IContentBrowsing/GetMovieInformationResponse")]
        bool GetMovieInformation(string token, ref RentItClient.RentItService.Movie movie);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentBrowsingChannel : RentItClient.RentItService.IContentBrowsing, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentBrowsingClient : System.ServiceModel.ClientBase<RentItClient.RentItService.IContentBrowsing>, RentItClient.RentItService.IContentBrowsing {
        
        public ContentBrowsingClient() {
        }
        
        public ContentBrowsingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentBrowsingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentBrowsingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentBrowsingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetMovies(out RentItClient.RentItService.Movie[] movies, string token, RentItClient.RentItService.MovieSorting sorting, string genre, int limit) {
            return base.Channel.GetMovies(out movies, token, sorting, genre, limit);
        }
        
        public bool GetGenres(out string[] genres, string token) {
            return base.Channel.GetGenres(out genres, token);
        }
        
        public bool Search(out RentItClient.RentItService.Movie[] movies, string token, string query) {
            return base.Channel.Search(out movies, token, query);
        }
        
        public bool GetMovieInformation(string token, ref RentItClient.RentItService.Movie movie) {
            return base.Channel.GetMovieInformation(token, ref movie);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentItService.IContentManagement")]
    public interface IContentManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/RegisterMovie", ReplyAction="http://tempuri.org/IContentManagement/RegisterMovieResponse")]
        bool RegisterMovie(string token, ref RentItClient.RentItService.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/EditMovie", ReplyAction="http://tempuri.org/IContentManagement/EditMovieResponse")]
        bool EditMovie(string token, ref RentItClient.RentItService.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/DeleteMovie", ReplyAction="http://tempuri.org/IContentManagement/DeleteMovieResponse")]
        bool DeleteMovie(string token, RentItClient.RentItService.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/UploadEdition", ReplyAction="http://tempuri.org/IContentManagement/UploadEditionResponse")]
        bool UploadEdition(string token, RentItClient.RentItService.RemoteFileStream stream, ref RentItClient.RentItService.Edition edition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentManagement/DeleteEdition", ReplyAction="http://tempuri.org/IContentManagement/DeleteEditionResponse")]
        bool DeleteEdition(string token, RentItClient.RentItService.Edition edition);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentManagementChannel : RentItClient.RentItService.IContentManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentManagementClient : System.ServiceModel.ClientBase<RentItClient.RentItService.IContentManagement>, RentItClient.RentItService.IContentManagement {
        
        public ContentManagementClient() {
        }
        
        public ContentManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterMovie(string token, ref RentItClient.RentItService.Movie movie) {
            return base.Channel.RegisterMovie(token, ref movie);
        }
        
        public bool EditMovie(string token, ref RentItClient.RentItService.Movie movie) {
            return base.Channel.EditMovie(token, ref movie);
        }
        
        public bool DeleteMovie(string token, RentItClient.RentItService.Movie movie) {
            return base.Channel.DeleteMovie(token, movie);
        }
        
        public bool UploadEdition(string token, RentItClient.RentItService.RemoteFileStream stream, ref RentItClient.RentItService.Edition edition) {
            return base.Channel.UploadEdition(token, stream, ref edition);
        }
        
        public bool DeleteEdition(string token, RentItClient.RentItService.Edition edition) {
            return base.Channel.DeleteEdition(token, edition);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentItService.IRentalManagement")]
    public interface IRentalManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalManagement/GetRentals", ReplyAction="http://tempuri.org/IRentalManagement/GetRentalsResponse")]
        bool GetRentals(out RentItClient.RentItService.Rental[] rentals, string token, RentItClient.RentItService.RentalScope scope);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalManagement/RentMovie", ReplyAction="http://tempuri.org/IRentalManagement/RentMovieResponse")]
        bool RentMovie(string token, RentItClient.RentItService.Edition edition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalManagement/DownloadFile", ReplyAction="http://tempuri.org/IRentalManagement/DownloadFileResponse")]
        bool DownloadFile(out RentItClient.RentItService.RemoteFileStream stream, string token, RentItClient.RentItService.Edition edition);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentalManagementChannel : RentItClient.RentItService.IRentalManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentalManagementClient : System.ServiceModel.ClientBase<RentItClient.RentItService.IRentalManagement>, RentItClient.RentItService.IRentalManagement {
        
        public RentalManagementClient() {
        }
        
        public RentalManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentalManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetRentals(out RentItClient.RentItService.Rental[] rentals, string token, RentItClient.RentItService.RentalScope scope) {
            return base.Channel.GetRentals(out rentals, token, scope);
        }
        
        public bool RentMovie(string token, RentItClient.RentItService.Edition edition) {
            return base.Channel.RentMovie(token, edition);
        }
        
        public bool DownloadFile(out RentItClient.RentItService.RemoteFileStream stream, string token, RentItClient.RentItService.Edition edition) {
            return base.Channel.DownloadFile(out stream, token, edition);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentItService.IUserManagement")]
    public interface IUserManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SignUp", ReplyAction="http://tempuri.org/IUserManagement/SignUpResponse")]
        bool SignUp(ref RentItClient.RentItService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/Login", ReplyAction="http://tempuri.org/IUserManagement/LoginResponse")]
        bool Login(out RentItClient.RentItService.User user, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/Logout", ReplyAction="http://tempuri.org/IUserManagement/LogoutResponse")]
        bool Logout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/EditUser", ReplyAction="http://tempuri.org/IUserManagement/EditUserResponse")]
        bool EditUser(string token, ref RentItClient.RentItService.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementChannel : RentItClient.RentItService.IUserManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementClient : System.ServiceModel.ClientBase<RentItClient.RentItService.IUserManagement>, RentItClient.RentItService.IUserManagement {
        
        public UserManagementClient() {
        }
        
        public UserManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SignUp(ref RentItClient.RentItService.User user) {
            return base.Channel.SignUp(ref user);
        }
        
        public bool Login(out RentItClient.RentItService.User user, string username, string password) {
            return base.Channel.Login(out user, username, password);
        }
        
        public bool Logout(string token) {
            return base.Channel.Logout(token);
        }
        
        public bool EditUser(string token, ref RentItClient.RentItService.User user) {
            return base.Channel.EditUser(token, ref user);
        }
    }
}
